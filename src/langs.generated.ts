// Generated by src/langs.ts (do not edit manually)

export type Lang =
  | "bash"
  | "beancount"
  | "bibtex"
  | "c"
  | "c-sharp"
  | "clojure"
  | "cmake"
  | "comment"
  | "commonlisp"
  | "cpp"
  | "css"
  | "cuda"
  | "cue"
  | "dart"
  | "devicetree"
  | "dockerfile"
  | "dot"
  | "eex"
  | "elisp"
  | "elixir"
  | "elm"
  | "embedded-template"
  | "erlang"
  | "fennel"
  | "fish"
  | "fortran"
  | "gdscript"
  | "glimmer"
  | "glsl"
  | "go"
  | "godot-resource"
  | "gomod"
  | "gowork"
  | "graphql"
  | "haskell"
  | "hcl"
  | "heex"
  | "hjson"
  | "html"
  | "http"
  | "janet-simple"
  | "java"
  | "javascript"
  | "jsdoc"
  | "json"
  | "json5"
  | "jsonnet"
  | "julia"
  | "kotlin"
  | "latex"
  | "ledger"
  | "llvm"
  | "lua"
  | "make"
  | "markdown"
  | "markdown-inline"
  | "nickel"
  | "nix"
  | "norg"
  | "nu"
  | "ocaml"
  | "ocaml-interface"
  | "org-nvim"
  | "perl"
  | "pgn"
  | "php"
  | "pioasm"
  | "prisma"
  | "proto"
  | "pug"
  | "python"
  | "ql"
  | "ql-dbscheme"
  | "query"
  | "r"
  | "razor"
  | "regex"
  | "rego"
  | "rst"
  | "ruby"
  | "rust"
  | "scala"
  | "scheme"
  | "scss"
  | "smithy"
  | "solidity"
  | "sparql"
  | "sql"
  | "supercollider"
  | "surface"
  | "svelte"
  | "tiger"
  | "tlaplus"
  | "toml"
  | "tsq"
  | "tsx"
  | "turtle"
  | "typescript"
  | "typst"
  | "verilog"
  | "vim"
  | "vue"
  | "wing"
  | "yaml"
  | "yang"
  | "zig";

export interface LangOption {
  grammar?: string;
  location?: string;
  generate?: boolean;
}

export const LangOptions: Partial<Record<Lang, LangOption>> = {
  "ocaml": { "grammar": "ocaml", "location": "ocaml" },
  "ocaml-interface": { "grammar": "ocaml", "location": "interface" },
  "typescript": { "grammar": "typescript", "location": "typescript" },
  "tsx": { "grammar": "typescript", "location": "tsx" },
  "typst": { "generate": true },
  "markdown": { "grammar": "markdown", "location": "tree-sitter-markdown" },
  "markdown-inline": {
    "grammar": "markdown",
    "location": "tree-sitter-markdown-inline",
  },
  "wing": { "location": "libs/tree-sitter-wing", "generate": true },
};
