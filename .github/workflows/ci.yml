name: CI

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE
  workflow_call:

permissions:
  contents: read

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.37.2 # denoland/deno

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno lint

  test:
    name: Test
    needs: check

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.37.2 # denoland/deno

      - name: Cache
        run: deno task cache

      - name: Run tests
        run: deno task test --coverage=./coverage_profile

      - name: Create coverage report
        run: deno coverage ./coverage_profile --lcov --output=./coverage.lcov

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ${{ env.REPO_PATH }}/coverage.lcov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
